@model Projeto01.Models.Categoria

<!DOCTYPE html>
<html lang="pt-br">
<head>
    <meta charset="UTF-8">
    <title>Create</title>
</head>
<body>
    <script src="~/Scripts/jquery-1.10.2.min.js"></script>
    <script src="~/Scripts/jquery.validate.min.js"></script>
    <script src="~/Scripts/jquery.validate.min.unobtrosive.js"></script>

    @using (Html.BeginForm()) { //Inicia um formul√°rio
        /* The purpose of using anti-forgery tokens is to prevent cross-site request forgery (CSRF) attacks. 
        It does this by submitting two different values to the server on any given POST, 
        both of which must exist in order for the server to allow the request.

        The ValidationSummary class is used to 
        summarize the error messages from all validators on a Web page in a single location.
        */
        @Html.AntiForgeryToken();
        <div class="form-horizontal">
            <h4>Categoria</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" }) 
            <div class="form-group">
                @Html.LabelFor(model => model.Nome, htmlAttributes: new { @class = "control-label col-md-2" }) <!--Forma de aplicar classe como html-->
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Nome, new { htmlAttributes = new {@class = "form-control"}})
                    @Html.ValidationMessageFor(model => model.Nome, "", new {@class = "text-danger"})
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Criar" class="btn btn-default">
                </div>
            </div>
        </div>
    }
    <div>
        @Html.ActionLink("Retornar para lista", "Index")
    </div>   
</body>
</html>